package funkycompiler

import stage3.*

object stdlib extends StdLibVariables with StdLibFunctions

trait StdLibVariables:
  var Pitch                 = Variable[Double]("Pitch")
  var Roll                  = Variable[Double]("Roll")
  var Yaw                   = Variable[Double]("Yaw")
  var Trim                  = Variable[Double]("Trim")
  var VTOL                  = Variable[Double]("VTOL")
  var Throttle              = Variable[Double]("Throttle")
  var Altitude              = Variable[Double]("Altitude")
  var AltitudeAgl           = Variable[Double]("AltitudeAgl")
  var GS                    = Variable[Double]("GS")
  var IAS                   = Variable[Double]("IAS")
  var TAS                   = Variable[Double]("TAS")
  var Fuel                  = Variable[Double]("Fuel")
  var AngleOfAttack         = Variable[Double]("AngleOfAttack")
  var AngleOfSlip           = Variable[Double]("AngleOfSlip")
  var PitchAngle            = Variable[Double]("PitchAngle")
  var RollAngle             = Variable[Double]("RollAngle")
  var Heading               = Variable[Double]("Heading")
  var Time                  = Variable[Double]("Time")
  var GForce                = Variable[Double]("GForce")
  var VerticalG             = Variable[Double]("VerticalG")
  var Latitude              = Variable[Double]("Latitude")
  var Longitude             = Variable[Double]("Longitude")
  var PitchRate             = Variable[Double]("PitchRate")
  var RollRate              = Variable[Double]("RollRate")
  var YawRate               = Variable[Double]("YawRate")
  var LandingGear           = Variable[Double]("LandingGear")
  var TargetHeading         = Variable[Double]("TargetHeading")
  var TargetElevation       = Variable[Double]("TargetElevation")
  var TargetDistance        = Variable[Double]("TargetDistance")
  var Brake                 = Variable[Boolean]("Brake")
  var GearDown              = Variable[Boolean]("GearDown")
  var FireGuns              = Variable[Boolean]("FireGuns")
  var FireWeapons           = Variable[Boolean]("FireWeapons")
  var LaunchCountermeasures = Variable[Boolean]("LaunchCountermeasures")
  var Activate1             = Variable[Boolean]("Activate1")
  var Activate2             = Variable[Boolean]("Activate2")
  var Activate3             = Variable[Boolean]("Activate3")
  var Activate4             = Variable[Boolean]("Activate4")
  var Activate5             = Variable[Boolean]("Activate5")
  var Activate6             = Variable[Boolean]("Activate6")
  var Activate7             = Variable[Boolean]("Activate7")
  var Activate8             = Variable[Boolean]("Activate8")
  var TargetSelected        = Variable[Boolean]("TargetSelected")
  var SelectedWeapon        = Variable[String]("SelectedWeapon")
end StdLibVariables

trait StdLibFunctions:
  def fun1Numeric(name: String) = stage3.Function1[Double, Double](name)
  def fun2Numeric(name: String) = stage3.Function2[Double, Double, Double](name)
  def fun3Numeric(name: String) = stage3.Function3[Double, Double, Double, Double](name)
  def fun4Numeric(name: String) = stage3.Function4[Double, Double, Double, Double, Double](name)
  def fun5Numeric(name: String) = stage3.Function5[Double, Double, Double, Double, Double, Double](name)

  val abs           = fun1Numeric("abs")
  val ceil          = fun1Numeric("ceil")
  val clamp         = fun3Numeric("clamp")
  val clamp01       = fun1Numeric("clamp01")
  val deltaangle    = fun2Numeric("deltaangle")
  val exp           = fun1Numeric("exp")
  val floor         = fun1Numeric("floor")
  val inverselerp   = fun3Numeric("inverselerp")
  val lerp          = fun3Numeric("lerp")
  val lerpangle     = fun3Numeric("lerpangle")
  val lerpunclamped = fun3Numeric("lerpunclamped")
  val log           = fun2Numeric("log")
  val log10         = fun1Numeric("log10")
  val pingpong      = fun2Numeric("pingpong")
  val max           = fun2Numeric("max")
  val min           = fun2Numeric("min")
  val pow           = fun2Numeric("pow")
  val repeat        = fun2Numeric("repeat")
  val round         = fun1Numeric("round")
  val sign          = fun1Numeric("sign")
  val smoothstep    = fun3Numeric("smoothstep")
  val sqrt          = fun1Numeric("sqrt")
  val sin           = fun1Numeric("sin")
  val cos           = fun1Numeric("cos")
  val tan           = fun1Numeric("tan")
  val asin          = fun1Numeric("asin")
  val acos          = fun1Numeric("acos")
  val atan          = fun1Numeric("atan")
  val rate          = fun1Numeric("rate")
  val sum           = fun1Numeric("sum")
  val smooth        = fun2Numeric("smooth")
  val PID           = fun5Numeric("PID")
  val ammo          = stage3.Function1[String, Double]("ammo")
end StdLibFunctions
