package funkycompiler

import stage3.*

object stdlib extends StdLibVariables with StdLibFunctions

trait StdLibVariables:
  val Pitch                 = Variable[Double]("Pitch")
  val Roll                  = Variable[Double]("Roll")
  val Yaw                   = Variable[Double]("Yaw")
  val Trim                  = Variable[Double]("Trim")
  val VTOL                  = Variable[Double]("VTOL")
  val Throttle              = Variable[Double]("Throttle")
  val Altitude              = Variable[Double]("Altitude")
  val AltitudeAgl           = Variable[Double]("AltitudeAgl")
  val GS                    = Variable[Double]("GS")
  val IAS                   = Variable[Double]("IAS")
  val TAS                   = Variable[Double]("TAS")
  val Fuel                  = Variable[Double]("Fuel")
  val AngleOfAttack         = Variable[Double]("AngleOfAttack")
  val AngleOfSlip           = Variable[Double]("AngleOfSlip")
  val PitchAngle            = Variable[Double]("PitchAngle")
  val RollAngle             = Variable[Double]("RollAngle")
  val Heading               = Variable[Double]("Heading")
  val Time                  = Variable[Double]("Time")
  val GForce                = Variable[Double]("GForce")
  val VerticalG             = Variable[Double]("VerticalG")
  val Latitude              = Variable[Double]("Latitude")
  val Longitude             = Variable[Double]("Longitude")
  val PitchRate             = Variable[Double]("PitchRate")
  val RollRate              = Variable[Double]("RollRate")
  val YawRate               = Variable[Double]("YawRate")
  val LandingGear           = Variable[Double]("LandingGear")
  val TargetHeading         = Variable[Double]("TargetHeading")
  val TargetElevation       = Variable[Double]("TargetElevation")
  val TargetDistance        = Variable[Double]("TargetDistance")
  val Brake                 = Variable[Boolean]("Brake")
  val GearDown              = Variable[Boolean]("GearDown")
  val FireGuns              = Variable[Boolean]("FireGuns")
  val FireWeapons           = Variable[Boolean]("FireWeapons")
  val LaunchCountermeasures = Variable[Boolean]("LaunchCountermeasures")
  val Activate1             = Variable[Boolean]("Activate1")
  val Activate2             = Variable[Boolean]("Activate2")
  val Activate3             = Variable[Boolean]("Activate3")
  val Activate4             = Variable[Boolean]("Activate4")
  val Activate5             = Variable[Boolean]("Activate5")
  val Activate6             = Variable[Boolean]("Activate6")
  val Activate7             = Variable[Boolean]("Activate7")
  val Activate8             = Variable[Boolean]("Activate8")
  val TargetSelected        = Variable[Boolean]("TargetSelected")
  val SelectedWeapon        = Variable[String]("SelectedWeapon")
end StdLibVariables

trait StdLibFunctions:
  def fun1Numeric(name: String) = stage3.Function1[Double, Double](name)
  def fun2Numeric(name: String) = stage3.Function2[Double, Double, Double](name)
  def fun3Numeric(name: String) = stage3.Function3[Double, Double, Double, Double](name)
  def fun4Numeric(name: String) = stage3.Function4[Double, Double, Double, Double, Double](name)
  def fun5Numeric(name: String) = stage3.Function5[Double, Double, Double, Double, Double, Double](name)

  val abs           = fun1Numeric("abs")
  val ceil          = fun1Numeric("ceil")
  val clamp         = fun3Numeric("clamp")
  val clamp01       = fun1Numeric("clamp01")
  val deltaangle    = fun2Numeric("deltaangle")
  val exp           = fun1Numeric("exp")
  val floor         = fun1Numeric("floor")
  val inverselerp   = fun3Numeric("inverselerp")
  val lerp          = fun3Numeric("lerp")
  val lerpangle     = fun3Numeric("lerpangle")
  val lerpunclamped = fun3Numeric("lerpunclamped")
  val log           = fun2Numeric("log")
  val log10         = fun1Numeric("log10")
  val pingpong      = fun2Numeric("pingpong")
  val max           = fun2Numeric("max")
  val min           = fun2Numeric("min")
  val pow           = fun2Numeric("pow")
  val repeat        = fun2Numeric("repeat")
  val round         = fun1Numeric("round")
  val sign          = fun1Numeric("sign")
  val smoothstep    = fun3Numeric("smoothstep")
  val sqrt          = fun1Numeric("sqrt")
  val sin           = fun1Numeric("sin")
  val cos           = fun1Numeric("cos")
  val tan           = fun1Numeric("tan")
  val asin          = fun1Numeric("asin")
  val acos          = fun1Numeric("acos")
  val atan          = fun1Numeric("atan")
  val rate          = fun1Numeric("rate")
  val sum           = fun1Numeric("sum")
  val smooth        = fun2Numeric("smooth")
  val PID           = fun5Numeric("PID")
  val ammo          = stage3.Function1[String, Double]("ammo")
end StdLibFunctions
